#! /usr/bin/env bash

: "${NIX:=nix}";
: "${SED:=sed}";

: "${NO_HEADER:=}";
: "${FLAKE_REF=nixpkgs}";

ATTR='';
NIX_FLAGS='';
# shellcheck disable=SC2034
declare -A REGREFS;

$NIX registry list|$SED 's/^[^:]\{1,\}:\([^ ]\{1,\}\) \(.*\)$/\1 \"\2\"/'  \
  |while read -r key val; do
    eval "REGREFS[$key]=$val";
  done;

is_regref() {
  test -n "${REGREFS[$1]:-}";
}

parse_flag() {
  case "$1" in
    --no-header|-H) NO_HEADER=:; return 1; ;;
    --write-to|--file|-f|--apply)
      NIX_FLAGS="${NIX_FLAGS+$NIX_FLAGS }$1 '$2'";
      return 2;
    ;;
    --raw)
      unlines='o: ( builtins.concatStringsSep "\n" o ) + "\n"';
      NIX_FLAGS="${NIX_FLAGS+$NIX_FLAGS }--raw --apply '$unlines'";
      return 1;
    ;;
    --json)
      NIX_FLAGS="${NIX_FLAGS+$NIX_FLAGS }$1";
      return 1;
    ;;
    *)
      echo "Unrecognized flag: $1" >&2;
      exit 1;
    ;;
  esac
}

parse_arg() {
  case "$1" in
    -*)
      parse_flag "$@";
      return "$?";
    ;;
    *#*)
      FLAKE_REF="${1/\#*}";
      ATTR="${1/*\#}";
      return 1;
    ;;
    *)
      if { is_regref "$1"||test -e "${1/\/}/flake.nix"; } && test "$#" -gt 1;
      then
        FLAKE_REF="${1%%/}";
        ATTR="$2";
        return 2;
      else
        ATTR="$1";
        return 1;
      fi
    ;;
  esac
}

set +e;
while test "$#" -gt 0; do
  parse_arg "$@";
  shift "$?";
done
set -e;

if test -z "${NO_HEADER:+y}"; then
  echo "> $FLAKE_REF#$ATTR.outputs" >&2;
fi

eval "$NIX eval --impure --derivation $NIX_FLAGS '$FLAKE_REF#$ATTR.outputs';"
